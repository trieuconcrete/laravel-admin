<?php

use Carbon\Carbon;
use Illuminate\Support\Facades\Auth;

if (!function_exists('greeting_message')) {
    function greeting_message()
    {
        $now = Carbon::now();
        $hour = (int) $now->format('H');
        $dayOfWeek = (int) $now->format('N');

        $name = Auth::user()->full_name ?? null; 
        if (in_array($dayOfWeek, [6, 7])) {
            $greeting = __('messages.happy_weekend') . ' üéâ';
        }

        if ($hour >= 22 || $hour < 5) {
            $greeting = __('messages.good_night') . ' üåô';
        }

        if ($hour >= 5 && $hour < 12) {
            $greeting = __('messages.good_morning') . ' ‚òÄÔ∏è';
        }

        if ($hour >= 12 && $hour < 18) {
            $greeting = __('messages.good_afternoon') . ' ‚òÄÔ∏è';
        }

        if ($hour >= 18 && $hour < 22) {
            $greeting = __('messages.good_evening') . ' üåá';
        }

        return $greeting . ', ' . $name . '!';
    }
}

if (!function_exists('format_date')) {
    function format_date($date, $format = 'd/m/Y')
    {
        return $date ? Carbon::parse($date)->format($format) : null;
    }
}

if (!function_exists('shorten_text')) {
    function shorten_text($text, $limit = 50)
    {
        return strlen($text) > $limit ? substr($text, 0, $limit) . '...' : $text;
    }
}

if (!function_exists('months_list')) {
    /**
     * Tr·∫£ v·ªÅ danh s√°ch c√°c th√°ng t·ª´ th√°ng hi·ªán t·∫°i ƒë·∫øn th√°ng tr·ªü v·ªÅ tr∆∞·ªõc
     * 
     * @param int $monthsBack S·ªë th√°ng tr·ªü v·ªÅ tr∆∞·ªõc (m·∫∑c ƒë·ªãnh l√† 12)
     * @param string $format ƒê·ªãnh d·∫°ng th√°ng (m·∫∑c ƒë·ªãnh l√† 'm/Y')
     * @param bool $includeKeys C√≥ bao g·ªìm key l√† timestamp hay kh√¥ng
     * @return array M·∫£ng danh s√°ch c√°c th√°ng
     */
    function months_list(int $monthsBack = 12, string $format = 'm/Y', bool $includeKeys = false): array
    {
        $months = [];
        $currentDate = now();
        
        for ($i = 0; $i < $monthsBack; $i++) {
            // T√≠nh to√°n ng√†y ƒë·∫ßu ti√™n c·ªßa th√°ng
            $date = (clone $currentDate)->subMonths($i)->startOfMonth();
            
            if ($includeKeys) {
                // S·ª≠ d·ª•ng timestamp l√†m key
                $months[$date->timestamp] = $date->format($format);
            } else {
                // M·∫£ng tu·∫ßn t·ª± kh√¥ng c√≥ key
                $months[] = $date->format($format);
            }
        }
        
        return $months;
    }
}

