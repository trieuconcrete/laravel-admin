version: '3.8'

services:
  app:
    build:
      context: ./src
      dockerfile: ../Dockerfile
    container_name: myapp_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./src:/var/www
    networks:
      - app-network
    depends_on:
      - mysql
      - redis
    platform: linux/amd64

  nginx:
    image: nginx:alpine
    container_name: myapp_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network
    depends_on:
      - app
      - redis
    platform: linux/amd64

  mysql:
    image: mysql:8.0
    container_name: myapp_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: myapp
      MYSQL_USER: myappuser
      MYSQL_PASSWORD: secret
    ports:
      - "33066:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    platform: linux/amd64

  redis:
    image: redis:latest
    container_name: myapp_redis
    restart: unless-stopped
    ports:
      - "6370:6379"
    networks:
      - app-network
    platform: linux/amd64

  mailhog:
    image: mailhog/mailhog
    container_name: myapp_mailhog
    ports:
      - "8028:8025"
      - "1029:1025"
    networks:
      - app-network
    platform: linux/amd64

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
